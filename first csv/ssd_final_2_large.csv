Name,Type,Input Channels,Output Channels,Kernel Size,Stride,Padding
,"SSD300(
  (feature_extractor): ResNet(
    (feature_extractor): Sequential(
      (0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
      (4): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (downsample): Sequential(
            (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (2): Bottleneck(
          (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
      (5): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (downsample): Sequential(
            (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
            (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (2): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (3): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
      (6): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (downsample): Sequential(
            (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (2): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (3): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (4): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (5): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
    )
  )
  (additional_blocks): ModuleList(
    (0): Sequential(
      (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (4): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU(inplace=True)
    )
    (1): Sequential(
      (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (4): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU(inplace=True)
    )
    (2): Sequential(
      (0): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU(inplace=True)
    )
    (3): Sequential(
      (0): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
      (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU(inplace=True)
    )
    (4): Sequential(
      (0): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
      (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU(inplace=True)
    )
  )
  (loc): ModuleList(
    (0): Conv2d(1024, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): Conv2d(512, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (2): Conv2d(512, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (3): Conv2d(256, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (4): Conv2d(256, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (5): Conv2d(256, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (conf): ModuleList(
    (0): Conv2d(1024, 324, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): Conv2d(512, 486, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (2): Conv2d(512, 486, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (3): Conv2d(256, 486, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (4): Conv2d(256, 324, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (5): Conv2d(256, 324, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
)"
feature_extractor,"ResNet(
  (feature_extractor): Sequential(
    (0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU(inplace=True)
    (3): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (4): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (5): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (3): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (6): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (3): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (4): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (5): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
  )
)"
feature_extractor.feature_extractor,"Sequential(
  (0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (4): Sequential(
    (0): Bottleneck(
      (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (downsample): Sequential(
        (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Bottleneck(
      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (2): Bottleneck(
      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
  )
  (5): Sequential(
    (0): Bottleneck(
      (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Bottleneck(
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (2): Bottleneck(
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (3): Bottleneck(
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
  )
  (6): Sequential(
    (0): Bottleneck(
      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (downsample): Sequential(
        (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Bottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (2): Bottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (3): Bottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (4): Bottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (5): Bottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
  )
)"
feature_extractor.feature_extractor.0,Conv2D,3,64,"(7, 7)","(2, 2)","(3, 3)"
feature_extractor.feature_extractor.1,BatchNorm2D,64
feature_extractor.feature_extractor.2,ReLU
feature_extractor.feature_extractor.3,MaxPool2D,3,2,1
feature_extractor.feature_extractor.4,Other,64,64,3,2,1
feature_extractor.feature_extractor.4.0,Other,64,64,3,2,1
feature_extractor.feature_extractor.4.0.conv1,Conv2D,64,64,"(1, 1)","(1, 1)","(0, 0)"
feature_extractor.feature_extractor.4.0.bn1,BatchNorm2D,64
feature_extractor.feature_extractor.4.0.conv2,Conv2D,64,64,"(3, 3)","(1, 1)","(1, 1)"
feature_extractor.feature_extractor.4.0.bn2,BatchNorm2D,64
feature_extractor.feature_extractor.4.0.conv3,Conv2D,64,256,"(1, 1)","(1, 1)","(0, 0)"
feature_extractor.feature_extractor.4.0.bn3,BatchNorm2D,256
feature_extractor.feature_extractor.4.0.relu,ReLU
feature_extractor.feature_extractor.4.0.downsample,Other,256,256,"(1, 1)","(1, 1)","(0, 0)"
feature_extractor.feature_extractor.4.0.downsample.0,Conv2D,64,256,"(1, 1)","(1, 1)","(0, 0)"
feature_extractor.feature_extractor.4.0.downsample.1,BatchNorm2D,256
feature_extractor.feature_extractor.4.1,Other,256,256,"(1, 1)","(1, 1)","(0, 0)"
feature_extractor.feature_extractor.4.1.conv1,Conv2D,256,64,"(1, 1)","(1, 1)","(0, 0)"
feature_extractor.feature_extractor.4.1.bn1,BatchNorm2D,64
feature_extractor.feature_extractor.4.1.conv2,Conv2D,64,64,"(3, 3)","(1, 1)","(1, 1)"
feature_extractor.feature_extractor.4.1.bn2,BatchNorm2D,64
feature_extractor.feature_extractor.4.1.conv3,Conv2D,64,256,"(1, 1)","(1, 1)","(0, 0)"
feature_extractor.feature_extractor.4.1.bn3,BatchNorm2D,256
feature_extractor.feature_extractor.4.1.relu,ReLU
feature_extractor.feature_extractor.4.2,Other,256,256,"(1, 1)","(1, 1)","(0, 0)"
feature_extractor.feature_extractor.4.2.conv1,Conv2D,256,64,"(1, 1)","(1, 1)","(0, 0)"
feature_extractor.feature_extractor.4.2.bn1,BatchNorm2D,64
feature_extractor.feature_extractor.4.2.conv2,Conv2D,64,64,"(3, 3)","(1, 1)","(1, 1)"
feature_extractor.feature_extractor.4.2.bn2,BatchNorm2D,64
feature_extractor.feature_extractor.4.2.conv3,Conv2D,64,256,"(1, 1)","(1, 1)","(0, 0)"
feature_extractor.feature_extractor.4.2.bn3,BatchNorm2D,256
feature_extractor.feature_extractor.4.2.relu,ReLU
feature_extractor.feature_extractor.5,Other,256,256,"(1, 1)","(1, 1)","(0, 0)"
feature_extractor.feature_extractor.5.0,Other,256,256,"(1, 1)","(1, 1)","(0, 0)"
feature_extractor.feature_extractor.5.0.conv1,Conv2D,256,128,"(1, 1)","(1, 1)","(0, 0)"
feature_extractor.feature_extractor.5.0.bn1,BatchNorm2D,128
feature_extractor.feature_extractor.5.0.conv2,Conv2D,128,128,"(3, 3)","(2, 2)","(1, 1)"
feature_extractor.feature_extractor.5.0.bn2,BatchNorm2D,128
feature_extractor.feature_extractor.5.0.conv3,Conv2D,128,512,"(1, 1)","(1, 1)","(0, 0)"
feature_extractor.feature_extractor.5.0.bn3,BatchNorm2D,512
feature_extractor.feature_extractor.5.0.relu,ReLU
feature_extractor.feature_extractor.5.0.downsample,Other,512,512,"(1, 1)","(1, 1)","(0, 0)"
feature_extractor.feature_extractor.5.0.downsample.0,Conv2D,256,512,"(1, 1)","(2, 2)","(0, 0)"
feature_extractor.feature_extractor.5.0.downsample.1,BatchNorm2D,512
feature_extractor.feature_extractor.5.1,Other,512,512,"(1, 1)","(2, 2)","(0, 0)"
feature_extractor.feature_extractor.5.1.conv1,Conv2D,512,128,"(1, 1)","(1, 1)","(0, 0)"
feature_extractor.feature_extractor.5.1.bn1,BatchNorm2D,128
feature_extractor.feature_extractor.5.1.conv2,Conv2D,128,128,"(3, 3)","(1, 1)","(1, 1)"
feature_extractor.feature_extractor.5.1.bn2,BatchNorm2D,128
feature_extractor.feature_extractor.5.1.conv3,Conv2D,128,512,"(1, 1)","(1, 1)","(0, 0)"
feature_extractor.feature_extractor.5.1.bn3,BatchNorm2D,512
feature_extractor.feature_extractor.5.1.relu,ReLU
feature_extractor.feature_extractor.5.2,Other,512,512,"(1, 1)","(1, 1)","(0, 0)"
feature_extractor.feature_extractor.5.2.conv1,Conv2D,512,128,"(1, 1)","(1, 1)","(0, 0)"
feature_extractor.feature_extractor.5.2.bn1,BatchNorm2D,128
feature_extractor.feature_extractor.5.2.conv2,Conv2D,128,128,"(3, 3)","(1, 1)","(1, 1)"
feature_extractor.feature_extractor.5.2.bn2,BatchNorm2D,128
feature_extractor.feature_extractor.5.2.conv3,Conv2D,128,512,"(1, 1)","(1, 1)","(0, 0)"
feature_extractor.feature_extractor.5.2.bn3,BatchNorm2D,512
feature_extractor.feature_extractor.5.2.relu,ReLU
feature_extractor.feature_extractor.5.3,Other,512,512,"(1, 1)","(1, 1)","(0, 0)"
feature_extractor.feature_extractor.5.3.conv1,Conv2D,512,128,"(1, 1)","(1, 1)","(0, 0)"
feature_extractor.feature_extractor.5.3.bn1,BatchNorm2D,128
feature_extractor.feature_extractor.5.3.conv2,Conv2D,128,128,"(3, 3)","(1, 1)","(1, 1)"
feature_extractor.feature_extractor.5.3.bn2,BatchNorm2D,128
feature_extractor.feature_extractor.5.3.conv3,Conv2D,128,512,"(1, 1)","(1, 1)","(0, 0)"
feature_extractor.feature_extractor.5.3.bn3,BatchNorm2D,512
feature_extractor.feature_extractor.5.3.relu,ReLU
feature_extractor.feature_extractor.6,Other,512,512,"(1, 1)","(1, 1)","(0, 0)"
feature_extractor.feature_extractor.6.0,Other,512,512,"(1, 1)","(1, 1)","(0, 0)"
feature_extractor.feature_extractor.6.0.conv1,Conv2D,512,256,"(1, 1)","(1, 1)","(0, 0)"
feature_extractor.feature_extractor.6.0.bn1,BatchNorm2D,256
feature_extractor.feature_extractor.6.0.conv2,Conv2D,256,256,"(3, 3)","(1, 1)","(1, 1)"
feature_extractor.feature_extractor.6.0.bn2,BatchNorm2D,256
feature_extractor.feature_extractor.6.0.conv3,Conv2D,256,1024,"(1, 1)","(1, 1)","(0, 0)"
feature_extractor.feature_extractor.6.0.bn3,BatchNorm2D,1024
feature_extractor.feature_extractor.6.0.relu,ReLU
feature_extractor.feature_extractor.6.0.downsample,Other,1024,1024,"(1, 1)","(1, 1)","(0, 0)"
feature_extractor.feature_extractor.6.0.downsample.0,Conv2D,512,1024,"(1, 1)","(1, 1)","(0, 0)"
feature_extractor.feature_extractor.6.0.downsample.1,BatchNorm2D,1024
feature_extractor.feature_extractor.6.1,Other,1024,1024,"(1, 1)","(1, 1)","(0, 0)"
feature_extractor.feature_extractor.6.1.conv1,Conv2D,1024,256,"(1, 1)","(1, 1)","(0, 0)"
feature_extractor.feature_extractor.6.1.bn1,BatchNorm2D,256
feature_extractor.feature_extractor.6.1.conv2,Conv2D,256,256,"(3, 3)","(1, 1)","(1, 1)"
feature_extractor.feature_extractor.6.1.bn2,BatchNorm2D,256
feature_extractor.feature_extractor.6.1.conv3,Conv2D,256,1024,"(1, 1)","(1, 1)","(0, 0)"
feature_extractor.feature_extractor.6.1.bn3,BatchNorm2D,1024
feature_extractor.feature_extractor.6.1.relu,ReLU
feature_extractor.feature_extractor.6.2,Other,1024,1024,"(1, 1)","(1, 1)","(0, 0)"
feature_extractor.feature_extractor.6.2.conv1,Conv2D,1024,256,"(1, 1)","(1, 1)","(0, 0)"
feature_extractor.feature_extractor.6.2.bn1,BatchNorm2D,256
feature_extractor.feature_extractor.6.2.conv2,Conv2D,256,256,"(3, 3)","(1, 1)","(1, 1)"
feature_extractor.feature_extractor.6.2.bn2,BatchNorm2D,256
feature_extractor.feature_extractor.6.2.conv3,Conv2D,256,1024,"(1, 1)","(1, 1)","(0, 0)"
feature_extractor.feature_extractor.6.2.bn3,BatchNorm2D,1024
feature_extractor.feature_extractor.6.2.relu,ReLU
feature_extractor.feature_extractor.6.3,Other,1024,1024,"(1, 1)","(1, 1)","(0, 0)"
feature_extractor.feature_extractor.6.3.conv1,Conv2D,1024,256,"(1, 1)","(1, 1)","(0, 0)"
feature_extractor.feature_extractor.6.3.bn1,BatchNorm2D,256
feature_extractor.feature_extractor.6.3.conv2,Conv2D,256,256,"(3, 3)","(1, 1)","(1, 1)"
feature_extractor.feature_extractor.6.3.bn2,BatchNorm2D,256
feature_extractor.feature_extractor.6.3.conv3,Conv2D,256,1024,"(1, 1)","(1, 1)","(0, 0)"
feature_extractor.feature_extractor.6.3.bn3,BatchNorm2D,1024
feature_extractor.feature_extractor.6.3.relu,ReLU
feature_extractor.feature_extractor.6.4,Other,1024,1024,"(1, 1)","(1, 1)","(0, 0)"
feature_extractor.feature_extractor.6.4.conv1,Conv2D,1024,256,"(1, 1)","(1, 1)","(0, 0)"
feature_extractor.feature_extractor.6.4.bn1,BatchNorm2D,256
feature_extractor.feature_extractor.6.4.conv2,Conv2D,256,256,"(3, 3)","(1, 1)","(1, 1)"
feature_extractor.feature_extractor.6.4.bn2,BatchNorm2D,256
feature_extractor.feature_extractor.6.4.conv3,Conv2D,256,1024,"(1, 1)","(1, 1)","(0, 0)"
feature_extractor.feature_extractor.6.4.bn3,BatchNorm2D,1024
feature_extractor.feature_extractor.6.4.relu,ReLU
feature_extractor.feature_extractor.6.5,Other,1024,1024,"(1, 1)","(1, 1)","(0, 0)"
feature_extractor.feature_extractor.6.5.conv1,Conv2D,1024,256,"(1, 1)","(1, 1)","(0, 0)"
feature_extractor.feature_extractor.6.5.bn1,BatchNorm2D,256
feature_extractor.feature_extractor.6.5.conv2,Conv2D,256,256,"(3, 3)","(1, 1)","(1, 1)"
feature_extractor.feature_extractor.6.5.bn2,BatchNorm2D,256
feature_extractor.feature_extractor.6.5.conv3,Conv2D,256,1024,"(1, 1)","(1, 1)","(0, 0)"
feature_extractor.feature_extractor.6.5.bn3,BatchNorm2D,1024
feature_extractor.feature_extractor.6.5.relu,ReLU
additional_blocks,Other,1024,1024,"(1, 1)","(1, 1)","(0, 0)"
additional_blocks.0,Other,1024,1024,"(1, 1)","(1, 1)","(0, 0)"
additional_blocks.0.0,Conv2D,1024,256,"(1, 1)","(1, 1)","(0, 0)"
additional_blocks.0.1,BatchNorm2D,256
additional_blocks.0.2,ReLU
additional_blocks.0.3,Conv2D,256,512,"(3, 3)","(2, 2)","(1, 1)"
additional_blocks.0.4,BatchNorm2D,512
additional_blocks.0.5,ReLU
additional_blocks.1,Other,512,512,"(3, 3)","(2, 2)","(1, 1)"
additional_blocks.1.0,Conv2D,512,256,"(1, 1)","(1, 1)","(0, 0)"
additional_blocks.1.1,BatchNorm2D,256
additional_blocks.1.2,ReLU
additional_blocks.1.3,Conv2D,256,512,"(3, 3)","(2, 2)","(1, 1)"
additional_blocks.1.4,BatchNorm2D,512
additional_blocks.1.5,ReLU
additional_blocks.2,Other,512,512,"(3, 3)","(2, 2)","(1, 1)"
additional_blocks.2.0,Conv2D,512,128,"(1, 1)","(1, 1)","(0, 0)"
additional_blocks.2.1,BatchNorm2D,128
additional_blocks.2.2,ReLU
additional_blocks.2.3,Conv2D,128,256,"(3, 3)","(2, 2)","(1, 1)"
additional_blocks.2.4,BatchNorm2D,256
additional_blocks.2.5,ReLU
additional_blocks.3,Other,256,256,"(3, 3)","(2, 2)","(1, 1)"
additional_blocks.3.0,Conv2D,256,128,"(1, 1)","(1, 1)","(0, 0)"
additional_blocks.3.1,BatchNorm2D,128
additional_blocks.3.2,ReLU
additional_blocks.3.3,Conv2D,128,256,"(3, 3)","(1, 1)","(0, 0)"
additional_blocks.3.4,BatchNorm2D,256
additional_blocks.3.5,ReLU
additional_blocks.4,Other,256,256,"(3, 3)","(1, 1)","(0, 0)"
additional_blocks.4.0,Conv2D,256,128,"(1, 1)","(1, 1)","(0, 0)"
additional_blocks.4.1,BatchNorm2D,128
additional_blocks.4.2,ReLU
additional_blocks.4.3,Conv2D,128,256,"(3, 3)","(1, 1)","(0, 0)"
additional_blocks.4.4,BatchNorm2D,256
additional_blocks.4.5,ReLU
loc,Other,256,256,"(3, 3)","(1, 1)","(0, 0)"
loc.0,Conv2D,1024,16,"(3, 3)","(1, 1)","(1, 1)"
loc.1,Conv2D,512,24,"(3, 3)","(1, 1)","(1, 1)"
loc.2,Conv2D,512,24,"(3, 3)","(1, 1)","(1, 1)"
loc.3,Conv2D,256,24,"(3, 3)","(1, 1)","(1, 1)"
loc.4,Conv2D,256,16,"(3, 3)","(1, 1)","(1, 1)"
loc.5,Conv2D,256,16,"(3, 3)","(1, 1)","(1, 1)"
conf,Other,256,16,"(3, 3)","(1, 1)","(1, 1)"
conf.0,Conv2D,1024,324,"(3, 3)","(1, 1)","(1, 1)"
conf.1,Conv2D,512,486,"(3, 3)","(1, 1)","(1, 1)"
conf.2,Conv2D,512,486,"(3, 3)","(1, 1)","(1, 1)"
conf.3,Conv2D,256,486,"(3, 3)","(1, 1)","(1, 1)"
conf.4,Conv2D,256,324,"(3, 3)","(1, 1)","(1, 1)"
conf.5,Conv2D,256,324,"(3, 3)","(1, 1)","(1, 1)"
,"SSD300(
  (feature_extractor): ResNet(
    (feature_extractor): Sequential(
      (0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
      (4): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (downsample): Sequential(
            (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (2): Bottleneck(
          (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
      (5): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (downsample): Sequential(
            (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
            (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (2): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (3): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
      (6): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (downsample): Sequential(
            (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (2): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (3): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (4): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (5): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
    )
  )
  (additional_blocks): ModuleList(
    (0): Sequential(
      (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (4): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU(inplace=True)
    )
    (1): Sequential(
      (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (4): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU(inplace=True)
    )
    (2): Sequential(
      (0): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU(inplace=True)
    )
    (3): Sequential(
      (0): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
      (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU(inplace=True)
    )
    (4): Sequential(
      (0): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
      (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU(inplace=True)
    )
  )
  (loc): ModuleList(
    (0): Conv2d(1024, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): Conv2d(512, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (2): Conv2d(512, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (3): Conv2d(256, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (4): Conv2d(256, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (5): Conv2d(256, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (conf): ModuleList(
    (0): Conv2d(1024, 324, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): Conv2d(512, 486, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (2): Conv2d(512, 486, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (3): Conv2d(256, 486, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (4): Conv2d(256, 324, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (5): Conv2d(256, 324, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
)",,,,,,
feature_extractor,"ResNet(
  (feature_extractor): Sequential(
    (0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU(inplace=True)
    (3): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (4): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (5): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (3): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (6): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (3): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (4): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (5): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
  )
)",,,,,,
feature_extractor.feature_extractor,"Sequential(
  (0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (4): Sequential(
    (0): Bottleneck(
      (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (downsample): Sequential(
        (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Bottleneck(
      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (2): Bottleneck(
      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
  )
  (5): Sequential(
    (0): Bottleneck(
      (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Bottleneck(
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (2): Bottleneck(
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (3): Bottleneck(
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
  )
  (6): Sequential(
    (0): Bottleneck(
      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (downsample): Sequential(
        (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Bottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (2): Bottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (3): Bottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (4): Bottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (5): Bottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
  )
)",,,,,,
feature_extractor.feature_extractor.0,Conv2D,3,64,"(7, 7)","(2, 2)","(3, 3)",
feature_extractor.feature_extractor.1,BatchNorm2D,64,,,,,
feature_extractor.feature_extractor.2,ReLU,,,,,,
feature_extractor.feature_extractor.3,MaxPool2D,,,,,,
feature_extractor.feature_extractor.4,Other,64,64,3,2,1,
feature_extractor.feature_extractor.4.0,Other,64,64,3,2,1,
feature_extractor.feature_extractor.4.0.conv1,Conv2D,64,64,"(1, 1)","(1, 1)","(0, 0)",
feature_extractor.feature_extractor.4.0.bn1,BatchNorm2D,64,,,,,
feature_extractor.feature_extractor.4.0.conv2,Conv2D,64,64,"(3, 3)","(1, 1)","(1, 1)",
feature_extractor.feature_extractor.4.0.bn2,BatchNorm2D,64,,,,,
feature_extractor.feature_extractor.4.0.conv3,Conv2D,64,256,"(1, 1)","(1, 1)","(0, 0)",
feature_extractor.feature_extractor.4.0.bn3,BatchNorm2D,256,,,,,
feature_extractor.feature_extractor.4.0.relu,ReLU,,,,,,
feature_extractor.feature_extractor.4.0.downsample,Other,256,256,"(1, 1)","(1, 1)","(0, 0)",
feature_extractor.feature_extractor.4.0.downsample.0,Conv2D,64,256,"(1, 1)","(1, 1)","(0, 0)",
feature_extractor.feature_extractor.4.0.downsample.1,BatchNorm2D,256,,,,,
feature_extractor.feature_extractor.4.1,Other,256,256,"(1, 1)","(1, 1)","(0, 0)",
feature_extractor.feature_extractor.4.1.conv1,Conv2D,256,64,"(1, 1)","(1, 1)","(0, 0)",
feature_extractor.feature_extractor.4.1.bn1,BatchNorm2D,64,,,,,
feature_extractor.feature_extractor.4.1.conv2,Conv2D,64,64,"(3, 3)","(1, 1)","(1, 1)",
feature_extractor.feature_extractor.4.1.bn2,BatchNorm2D,64,,,,,
feature_extractor.feature_extractor.4.1.conv3,Conv2D,64,256,"(1, 1)","(1, 1)","(0, 0)",
feature_extractor.feature_extractor.4.1.bn3,BatchNorm2D,256,,,,,
feature_extractor.feature_extractor.4.1.relu,ReLU,,,,,,
feature_extractor.feature_extractor.4.2,Other,256,256,"(1, 1)","(1, 1)","(0, 0)",
feature_extractor.feature_extractor.4.2.conv1,Conv2D,256,64,"(1, 1)","(1, 1)","(0, 0)",
feature_extractor.feature_extractor.4.2.bn1,BatchNorm2D,64,,,,,
feature_extractor.feature_extractor.4.2.conv2,Conv2D,64,64,"(3, 3)","(1, 1)","(1, 1)",
feature_extractor.feature_extractor.4.2.bn2,BatchNorm2D,64,,,,,
feature_extractor.feature_extractor.4.2.conv3,Conv2D,64,256,"(1, 1)","(1, 1)","(0, 0)",
feature_extractor.feature_extractor.4.2.bn3,BatchNorm2D,256,,,,,
feature_extractor.feature_extractor.4.2.relu,ReLU,,,,,,
feature_extractor.feature_extractor.5,Other,256,256,"(1, 1)","(1, 1)","(0, 0)",
feature_extractor.feature_extractor.5.0,Other,256,256,"(1, 1)","(1, 1)","(0, 0)",
feature_extractor.feature_extractor.5.0.conv1,Conv2D,256,128,"(1, 1)","(1, 1)","(0, 0)",
feature_extractor.feature_extractor.5.0.bn1,BatchNorm2D,128,,,,,
feature_extractor.feature_extractor.5.0.conv2,Conv2D,128,128,"(3, 3)","(2, 2)","(1, 1)",
feature_extractor.feature_extractor.5.0.bn2,BatchNorm2D,128,,,,,
feature_extractor.feature_extractor.5.0.conv3,Conv2D,128,512,"(1, 1)","(1, 1)","(0, 0)",
feature_extractor.feature_extractor.5.0.bn3,BatchNorm2D,512,,,,,
feature_extractor.feature_extractor.5.0.relu,ReLU,,,,,,
feature_extractor.feature_extractor.5.0.downsample,Other,512,512,"(1, 1)","(1, 1)","(0, 0)",
feature_extractor.feature_extractor.5.0.downsample.0,Conv2D,256,512,"(1, 1)","(2, 2)","(0, 0)",
feature_extractor.feature_extractor.5.0.downsample.1,BatchNorm2D,512,,,,,
feature_extractor.feature_extractor.5.1,Other,512,512,"(1, 1)","(2, 2)","(0, 0)",
feature_extractor.feature_extractor.5.1.conv1,Conv2D,512,128,"(1, 1)","(1, 1)","(0, 0)",
feature_extractor.feature_extractor.5.1.bn1,BatchNorm2D,128,,,,,
feature_extractor.feature_extractor.5.1.conv2,Conv2D,128,128,"(3, 3)","(1, 1)","(1, 1)",
feature_extractor.feature_extractor.5.1.bn2,BatchNorm2D,128,,,,,
feature_extractor.feature_extractor.5.1.conv3,Conv2D,128,512,"(1, 1)","(1, 1)","(0, 0)",
feature_extractor.feature_extractor.5.1.bn3,BatchNorm2D,512,,,,,
feature_extractor.feature_extractor.5.1.relu,ReLU,,,,,,
feature_extractor.feature_extractor.5.2,Other,512,512,"(1, 1)","(1, 1)","(0, 0)",
feature_extractor.feature_extractor.5.2.conv1,Conv2D,512,128,"(1, 1)","(1, 1)","(0, 0)",
feature_extractor.feature_extractor.5.2.bn1,BatchNorm2D,128,,,,,
feature_extractor.feature_extractor.5.2.conv2,Conv2D,128,128,"(3, 3)","(1, 1)","(1, 1)",
feature_extractor.feature_extractor.5.2.bn2,BatchNorm2D,128,,,,,
feature_extractor.feature_extractor.5.2.conv3,Conv2D,128,512,"(1, 1)","(1, 1)","(0, 0)",
feature_extractor.feature_extractor.5.2.bn3,BatchNorm2D,512,,,,,
feature_extractor.feature_extractor.5.2.relu,ReLU,,,,,,
feature_extractor.feature_extractor.5.3,Other,512,512,"(1, 1)","(1, 1)","(0, 0)",
feature_extractor.feature_extractor.5.3.conv1,Conv2D,512,128,"(1, 1)","(1, 1)","(0, 0)",
feature_extractor.feature_extractor.5.3.bn1,BatchNorm2D,128,,,,,
feature_extractor.feature_extractor.5.3.conv2,Conv2D,128,128,"(3, 3)","(1, 1)","(1, 1)",
feature_extractor.feature_extractor.5.3.bn2,BatchNorm2D,128,,,,,
feature_extractor.feature_extractor.5.3.conv3,Conv2D,128,512,"(1, 1)","(1, 1)","(0, 0)",
feature_extractor.feature_extractor.5.3.bn3,BatchNorm2D,512,,,,,
feature_extractor.feature_extractor.5.3.relu,ReLU,,,,,,
feature_extractor.feature_extractor.6,Other,512,512,"(1, 1)","(1, 1)","(0, 0)",
feature_extractor.feature_extractor.6.0,Other,512,512,"(1, 1)","(1, 1)","(0, 0)",
feature_extractor.feature_extractor.6.0.conv1,Conv2D,512,256,"(1, 1)","(1, 1)","(0, 0)",
feature_extractor.feature_extractor.6.0.bn1,BatchNorm2D,256,,,,,
feature_extractor.feature_extractor.6.0.conv2,Conv2D,256,256,"(3, 3)","(1, 1)","(1, 1)",
feature_extractor.feature_extractor.6.0.bn2,BatchNorm2D,256,,,,,
feature_extractor.feature_extractor.6.0.conv3,Conv2D,256,1024,"(1, 1)","(1, 1)","(0, 0)",
feature_extractor.feature_extractor.6.0.bn3,BatchNorm2D,1024,,,,,
feature_extractor.feature_extractor.6.0.relu,ReLU,,,,,,
feature_extractor.feature_extractor.6.0.downsample,Other,1024,1024,"(1, 1)","(1, 1)","(0, 0)",
feature_extractor.feature_extractor.6.0.downsample.0,Conv2D,512,1024,"(1, 1)","(1, 1)","(0, 0)",
feature_extractor.feature_extractor.6.0.downsample.1,BatchNorm2D,1024,,,,,
feature_extractor.feature_extractor.6.1,Other,1024,1024,"(1, 1)","(1, 1)","(0, 0)",
feature_extractor.feature_extractor.6.1.conv1,Conv2D,1024,256,"(1, 1)","(1, 1)","(0, 0)",
feature_extractor.feature_extractor.6.1.bn1,BatchNorm2D,256,,,,,
feature_extractor.feature_extractor.6.1.conv2,Conv2D,256,256,"(3, 3)","(1, 1)","(1, 1)",
feature_extractor.feature_extractor.6.1.bn2,BatchNorm2D,256,,,,,
feature_extractor.feature_extractor.6.1.conv3,Conv2D,256,1024,"(1, 1)","(1, 1)","(0, 0)",
feature_extractor.feature_extractor.6.1.bn3,BatchNorm2D,1024,,,,,
feature_extractor.feature_extractor.6.1.relu,ReLU,,,,,,
feature_extractor.feature_extractor.6.2,Other,1024,1024,"(1, 1)","(1, 1)","(0, 0)",
feature_extractor.feature_extractor.6.2.conv1,Conv2D,1024,256,"(1, 1)","(1, 1)","(0, 0)",
feature_extractor.feature_extractor.6.2.bn1,BatchNorm2D,256,,,,,
feature_extractor.feature_extractor.6.2.conv2,Conv2D,256,256,"(3, 3)","(1, 1)","(1, 1)",
feature_extractor.feature_extractor.6.2.bn2,BatchNorm2D,256,,,,,
feature_extractor.feature_extractor.6.2.conv3,Conv2D,256,1024,"(1, 1)","(1, 1)","(0, 0)",
feature_extractor.feature_extractor.6.2.bn3,BatchNorm2D,1024,,,,,
feature_extractor.feature_extractor.6.2.relu,ReLU,,,,,,
feature_extractor.feature_extractor.6.3,Other,1024,1024,"(1, 1)","(1, 1)","(0, 0)",
feature_extractor.feature_extractor.6.3.conv1,Conv2D,1024,256,"(1, 1)","(1, 1)","(0, 0)",
feature_extractor.feature_extractor.6.3.bn1,BatchNorm2D,256,,,,,
feature_extractor.feature_extractor.6.3.conv2,Conv2D,256,256,"(3, 3)","(1, 1)","(1, 1)",
feature_extractor.feature_extractor.6.3.bn2,BatchNorm2D,256,,,,,
feature_extractor.feature_extractor.6.3.conv3,Conv2D,256,1024,"(1, 1)","(1, 1)","(0, 0)",
feature_extractor.feature_extractor.6.3.bn3,BatchNorm2D,1024,,,,,
feature_extractor.feature_extractor.6.3.relu,ReLU,,,,,,
feature_extractor.feature_extractor.6.4,Other,1024,1024,"(1, 1)","(1, 1)","(0, 0)",
feature_extractor.feature_extractor.6.4.conv1,Conv2D,1024,256,"(1, 1)","(1, 1)","(0, 0)",
feature_extractor.feature_extractor.6.4.bn1,BatchNorm2D,256,,,,,
feature_extractor.feature_extractor.6.4.conv2,Conv2D,256,256,"(3, 3)","(1, 1)","(1, 1)",
feature_extractor.feature_extractor.6.4.bn2,BatchNorm2D,256,,,,,
feature_extractor.feature_extractor.6.4.conv3,Conv2D,256,1024,"(1, 1)","(1, 1)","(0, 0)",
feature_extractor.feature_extractor.6.4.bn3,BatchNorm2D,1024,,,,,
feature_extractor.feature_extractor.6.4.relu,ReLU,,,,,,
feature_extractor.feature_extractor.6.5,Other,1024,1024,"(1, 1)","(1, 1)","(0, 0)",
feature_extractor.feature_extractor.6.5.conv1,Conv2D,1024,256,"(1, 1)","(1, 1)","(0, 0)",
feature_extractor.feature_extractor.6.5.bn1,BatchNorm2D,256,,,,,
feature_extractor.feature_extractor.6.5.conv2,Conv2D,256,256,"(3, 3)","(1, 1)","(1, 1)",
feature_extractor.feature_extractor.6.5.bn2,BatchNorm2D,256,,,,,
feature_extractor.feature_extractor.6.5.conv3,Conv2D,256,1024,"(1, 1)","(1, 1)","(0, 0)",
feature_extractor.feature_extractor.6.5.bn3,BatchNorm2D,1024,,,,,
feature_extractor.feature_extractor.6.5.relu,ReLU,,,,,,
additional_blocks,Other,1024,1024,"(1, 1)","(1, 1)","(0, 0)",
additional_blocks.0,Other,1024,1024,"(1, 1)","(1, 1)","(0, 0)",
additional_blocks.0.0,Conv2D,1024,256,"(1, 1)","(1, 1)","(0, 0)",
additional_blocks.0.1,BatchNorm2D,256,,,,,
additional_blocks.0.2,ReLU,,,,,,
additional_blocks.0.3,Conv2D,256,512,"(3, 3)","(2, 2)","(1, 1)",
additional_blocks.0.4,BatchNorm2D,512,,,,,
additional_blocks.0.5,ReLU,,,,,,
additional_blocks.1,Other,512,512,"(3, 3)","(2, 2)","(1, 1)",
additional_blocks.1.0,Conv2D,512,256,"(1, 1)","(1, 1)","(0, 0)",
additional_blocks.1.1,BatchNorm2D,256,,,,,
additional_blocks.1.2,ReLU,,,,,,
additional_blocks.1.3,Conv2D,256,512,"(3, 3)","(2, 2)","(1, 1)",
additional_blocks.1.4,BatchNorm2D,512,,,,,
additional_blocks.1.5,ReLU,,,,,,
additional_blocks.2,Other,512,512,"(3, 3)","(2, 2)","(1, 1)",
additional_blocks.2.0,Conv2D,512,128,"(1, 1)","(1, 1)","(0, 0)",
additional_blocks.2.1,BatchNorm2D,128,,,,,
additional_blocks.2.2,ReLU,,,,,,
additional_blocks.2.3,Conv2D,128,256,"(3, 3)","(2, 2)","(1, 1)",
additional_blocks.2.4,BatchNorm2D,256,,,,,
additional_blocks.2.5,ReLU,,,,,,
additional_blocks.3,Other,256,256,"(3, 3)","(2, 2)","(1, 1)",
additional_blocks.3.0,Conv2D,256,128,"(1, 1)","(1, 1)","(0, 0)",
additional_blocks.3.1,BatchNorm2D,128,,,,,
additional_blocks.3.2,ReLU,,,,,,
additional_blocks.3.3,Conv2D,128,256,"(3, 3)","(1, 1)","(0, 0)",
additional_blocks.3.4,BatchNorm2D,256,,,,,
additional_blocks.3.5,ReLU,,,,,,
additional_blocks.4,Other,256,256,"(3, 3)","(1, 1)","(0, 0)",
additional_blocks.4.0,Conv2D,256,128,"(1, 1)","(1, 1)","(0, 0)",
additional_blocks.4.1,BatchNorm2D,128,,,,,
additional_blocks.4.2,ReLU,,,,,,
additional_blocks.4.3,Conv2D,128,256,"(3, 3)","(1, 1)","(0, 0)",
additional_blocks.4.4,BatchNorm2D,256,,,,,
additional_blocks.4.5,ReLU,,,,,,
loc,Other,256,256,"(3, 3)","(1, 1)","(0, 0)",
loc.0,Conv2D,1024,16,"(3, 3)","(1, 1)","(1, 1)",
loc.1,Conv2D,512,24,"(3, 3)","(1, 1)","(1, 1)",
loc.2,Conv2D,512,24,"(3, 3)","(1, 1)","(1, 1)",
loc.3,Conv2D,256,24,"(3, 3)","(1, 1)","(1, 1)",
loc.4,Conv2D,256,16,"(3, 3)","(1, 1)","(1, 1)",
loc.5,Conv2D,256,16,"(3, 3)","(1, 1)","(1, 1)",
conf,Other,256,16,"(3, 3)","(1, 1)","(1, 1)",
conf.0,Conv2D,1024,324,"(3, 3)","(1, 1)","(1, 1)",
conf.1,Conv2D,512,486,"(3, 3)","(1, 1)","(1, 1)",
conf.2,Conv2D,512,486,"(3, 3)","(1, 1)","(1, 1)",
conf.3,Conv2D,256,486,"(3, 3)","(1, 1)","(1, 1)",
conf.4,Conv2D,256,324,"(3, 3)","(1, 1)","(1, 1)",
conf.5,Conv2D,256,324,"(3, 3)","(1, 1)","(1, 1)",
